spring:
  # 邮箱配置
  mail:
    host: smtp.qq.com
    username: 邮箱号
    password: 密码
    default-encoding: utf-8
    properties:
      mail.smtp.ssl.enable: true # qq需要配置ssl
  # 上传图片大小限制
  servlet:
    multipart:
      max-file-size: 100MB
      maxRequestSize: 100MB
  application:
    name: blog-web
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://IP地址:端口号/数据库名?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: 数据库用户
    password: 数据库密码
    hikari:
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 连接池名称
      pool-name: MyHikariCP
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1
      connection-init-sql: set names utf8mb4
  # redis配置
  redis:
    database: 0
    host: IP
    port: 端口号
    password: 密码
  # rabbitmq 配置
  rabbitmq:
    host: IP
    port: 端口号
    virtual-host: /
    username: 用户
    password: 密码
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3 #最大重试次数
          initial-interval: 3000 #重试间隔时间（单位毫秒）
# mybatis-plus配置
mybatis-plus:
  mapper-locations: classpath*:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
  type-aliases-package: com.zhao.pojo
  global-config:
    db-config:
      logic-not-delete-value: 0
      logic-delete-value: 1
server:
  port: 8080
# 搜索模式 可选 elasticsearch 或 mysql
search:
  mode: elasticsearch
# es配置
elasticsearch:
  rest:
    host: IP
    port: 端口号 
# 上传文件配置
upload:
  mode: product # local or product
  local:
    # nginx映射本地文件路径
    url: http://localhost:8080/
    # 本地文件存储路径
    path: 本地文件存储路径
  product:
    # nginx映射本地文件路径
    url: 你服务器的IP地址
    # 本地文件存储路径
    path: /usr/local/upload/
#第三方配置信息
qq:
  app-id: appid
  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}
